<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangliang.dao.MsUserMapper">
  <resultMap id="BaseResultMap" type="com.liangliang.entity.MsUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_account, user_password, user_sex, user_age, user_address, user_email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ms_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ms_user
    where user_account = #{userAccount,jdbcType=INTEGER}
  </select>
  
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ms_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liangliang.entity.MsUser">
    insert into ms_user (id, user_name, user_account, 
      user_password, user_sex, user_age, 
      user_address, user_email)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userSex,jdbcType=INTEGER}, #{userAge,jdbcType=INTEGER}, 
      #{userAddress,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liangliang.entity.MsUser">
    insert into ms_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="user_account != null">
        user_account,
      </if>
      <if test="user_password != null">
        user_password,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="user_account != null">
        #{user_account,jdbcType=VARCHAR},
      </if>
      <if test="user_password != null">
        #{user_password,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangliang.entity.MsUser">
    update ms_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="user_account != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="user_password != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangliang.entity.MsUser">
    update ms_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_account = #{userAccount,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=INTEGER},
      user_age = #{userAge,jdbcType=INTEGER},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
	<sql id="consutomsql" >
		<if test="constomUser != null">
			<if test="constomUser.userName!=null and constomUser.userName!=''">
					and user_name = "${constomUser.userName}"
				</if>
				<if test="constomUser.userAccount!=null and constomUser.userAccount!='' ">
					and user_account = "${constomUser.userAccount}"
			</if>
			<if test="constomUser.userPassword!=null and constomUser.userPassword!='' ">
					and user_password = "${constomUser.userPassword}"
			</if>
			<if test="constomUser.userSex!=null and constomUser.userSex!='' ">
					and user_sex = "${constomUser.userSex}"
			</if>
			<if test="constomUser.userAge!=null and constomUser.userAge!='' ">
					and user_age = "${constomUser.userAge}"
			</if>
			<if test="constomUser.userAddress!=null and constomUser.userAddress!='' ">
					and user_address = "${constomUser.userAddress}"
			</if>
			<if test="constomUser.userEmail!=null and constomUser.userEmail!='' ">
					and user_email = "${constomUser.userEmail}"
			</if>
		</if>
	</sql>
	
	<select id="queryMsUserByVo" parameterType="com.liangliang.vo.MsUserVo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
	from ms_user
    	<where>
			<include refid="consutomsql"></include>
		</where>
	</select>
</mapper>