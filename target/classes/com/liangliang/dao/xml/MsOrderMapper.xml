<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangliang.dao.MsOrderMapper">
  <resultMap id="BaseResultMap" type="com.liangliang.entity.MsOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="pay_amount" jdbcType="INTEGER" property="payAmount" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="receive_address" jdbcType="VARCHAR" property="receiveAddress" />
    <result column="receive_phone" jdbcType="INTEGER" property="receivePhone" />
    <result column="receive_name" jdbcType="VARCHAR" property="receiveName" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, pay_amount, user_id, merchant_id, create_time, pay_time, pay_status, 
    receive_address, receive_phone, receive_name, trade_id, num,pay_type
  </sql>
  
   <update id="updateOrderStatusById" parameterType="com.liangliang.vo.order.MsOrderVo">
    update ms_order
    <set>
      <if test="constomOrder.payStatus != null">
        pay_status = #{constomOrder.payStatus,jdbcType=INTEGER},
      </if>
      <if test="constomOrder.payType != null">
        pay_type = #{constomOrder.payType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{constomOrder.id,jdbcType=INTEGER}
  </update>
  
  <select id="queryOrderListByMerId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ms_order
    where merchant_id = #{merchantId,jdbcType=INTEGER}
  </select>
  
  <select id="queryOrderByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ms_order
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" parameterType="com.liangliang.entity.MsOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ms_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ms_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ms_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liangliang.entity.MsOrderExample">
    delete from ms_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liangliang.entity.MsOrder">
    insert into ms_order (id, product_id, pay_amount, 
      user_id, merchant_id, create_time, 
      pay_time, pay_status, receive_address, 
      receive_phone, receive_name, trade_id, 
      num)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{payAmount,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{merchantId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=INTEGER}, #{receiveAddress,jdbcType=VARCHAR}, 
      #{receivePhone,jdbcType=INTEGER}, #{receiveName,jdbcType=VARCHAR}, #{tradeId,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liangliang.entity.MsOrder">
    insert into ms_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="receiveAddress != null">
        receive_address,
      </if>
      <if test="receivePhone != null">
        receive_phone,
      </if>
      <if test="receiveName != null">
        receive_name,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="receiveAddress != null">
        #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="receivePhone != null">
        #{receivePhone,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null">
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liangliang.entity.MsOrderExample" resultType="java.lang.Long">
    select count(*) from ms_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ms_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.receiveAddress != null">
        receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receivePhone != null">
        receive_phone = #{record.receivePhone,jdbcType=INTEGER},
      </if>
      <if test="record.receiveName != null">
        receive_name = #{record.receiveName,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeId != null">
        trade_id = #{record.tradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ms_order
    set id = #{record.id,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      receive_phone = #{record.receivePhone,jdbcType=INTEGER},
      receive_name = #{record.receiveName,jdbcType=VARCHAR},
      trade_id = #{record.tradeId,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangliang.entity.MsOrder">
    update ms_order
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="receiveAddress != null">
        receive_address = #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="receivePhone != null">
        receive_phone = #{receivePhone,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null">
        receive_name = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangliang.entity.MsOrder">
    update ms_order
    set product_id = #{productId,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=INTEGER},
      receive_address = #{receiveAddress,jdbcType=VARCHAR},
      receive_phone = #{receivePhone,jdbcType=INTEGER},
      receive_name = #{receiveName,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>